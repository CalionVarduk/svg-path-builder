import each from 'jest-each';
import { Angle } from '../../core/primitives/angle';

each([
    [0, 0],
    [1, 0.017453292],
    [-1, -0.017453292],
    [2, 0.034906585],
    [-2, -0.034906585],
    [90, 1.570796326],
    [180, 3.141592653],
    [-270, -4.71238898],
    [360, 6.283185307],
    [540, 9.42477796],
    [-720, -12.566370614],
    [45, 0.785398163],
    [-45, -0.785398163],
    [13, 0.226892802],
    [12.5, 0.218166156],
    [17.7, 0.308923277],
    [-44.4, -0.774926187],
    [0.01, 0.000174532],
    [-12, -0.20943951],
    [1111, 19.390607989],
    [-1111, -19.390607989]
])
.test('to radians (%#): degrees: %f, expected radians: %f',
    (v, expected) =>
    {
        expect(Angle.toRadians(v)).toBeCloseTo(expected, 8);
    }
);

each([
    [0, 0],
    [0.017453292, 1],
    [-0.017453292, -1],
    [0.034906585, 2],
    [-0.034906585, -2],
    [1.570796326, 90],
    [3.141592653, 180],
    [-4.71238898, -270],
    [6.283185307, 360],
    [9.42477796, 540],
    [-12.566370614, -720],
    [0.785398163, 45],
    [-0.785398163, -45],
    [0.226892802, 13],
    [0.218166156, 12.5],
    [0.308923277, 17.7],
    [-0.774926187, -44.4],
    [0.000174532, 0.01],
    [-0.20943951, -12],
    [19.390607989, 1111],
    [-19.390607989, -1111]
])
.test('to degrees (%#): radians: %f, expected degrees: %f',
    (v, expected) =>
    {
        expect(Angle.toDegrees(v)).toBeCloseTo(expected, 6);
    }
);

each([
    [0, 0, 1, 0],
    [1, 0.017452406, 0.999847695, 0.017453292],
    [-1, -0.017452406, 0.999847695, -0.017453292],
    [2, 0.034899496, 0.999390827, 0.034906585],
    [-2, -0.034899496, 0.999390827, -0.034906585],
    [90, 1, 0, 1.570796326],
    [180, 0, -1, 3.141592653],
    [-270, 1, 0, -4.71238898],
    [360, 0, 1, 6.283185307],
    [540, 0, -1, 9.42477796],
    [-720, 0, 1, -12.566370614],
    [45, 0.707106781, 0.707106781, 0.785398163],
    [-45, -0.707106781, 0.707106781, -0.785398163],
    [13, 0.224951054, 0.974370064, 0.226892802],
    [12.5, 0.216439613, 0.976296007, 0.218166156],
    [17.7, 0.30403306, 0.952661481, 0.308923277],
    [-44.4, -0.69966334, 0.714472679, -0.774926187],
    [0.01, 0.000174532, 0.999999984, 0.000174532],
    [-12, -0.20791169, 0.9781476, -0.20943951],
    [1111, 0.515038074, 0.8571673, 19.390607989],
    [-1111, -0.515038074, 0.8571673, -19.390607989]
])
.test('ctor should create properly (%#): degrees: %f, expected sin: %f, expected cos: %f, expected radians: %f',
    (degrees, expectedSin, expectedCos, expectedRad) =>
    {
        const sut = new Angle(degrees);
        expect(sut.degrees).toBe(degrees);
        expect(sut.sin).toBeCloseTo(expectedSin, 8);
        expect(sut.cos).toBeCloseTo(expectedCos, 8);
        expect(sut.radians).toBeCloseTo(expectedRad, 8);
    }
);
